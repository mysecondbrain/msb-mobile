name: Apply Patch (files JSON)

on:
  workflow_dispatch:
    inputs:
      FILES_JSON:
        description: 'JSON-Array: [{"path":"file","content":"...","encoding":"plain|base64"}]'
        required: true

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write files from JSON
        shell: bash
        run: |
          set -euo pipefail

          # JSON aus dem Eingabefeld zunÃ¤chst validieren
          jq -e . >/dev/null 2>&1 <<'JSON'
${{ inputs.FILES_JSON }}
JSON

          # JSON in Datei schreiben
          printf '%s\n' "${{ inputs.FILES_JSON }}" > files.json

          # Dateien schreiben (plain oder base64)
          python3 - <<'PY'
import os, json, base64
with open("files.json", "r", encoding="utf-8") as f:
    data = json.load(f)

for it in data:
    path = it["path"]
    content = it["content"]
    enc = it.get("encoding", "plain")
    d = os.path.dirname(path)
    if d and not os.path.exists(d):
        os.makedirs(d, exist_ok=True)
    if enc == "base64":
        with open(path, "wb") as w:
            w.write(base64.b64decode(content))
    else:
        with open(path, "w", encoding="utf-8", newline="\n") as w:
            w.write(content)
print(f"Wrote {len(data)} files")
PY

      - name: Commit changes
        shell: bash
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: apply patch"
            git push
          fi
